{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","components/discr.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","class","href","className","this","props","totalCounters","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","tabindex","aria-disabled","Component","Counter","counter","text","getBadgeClasses","formateCount","onClick","onIncre","onDecre","onDelete","classes","value","Counters","OnReset","counters","map","key","onAdd","Disc","App","state","txt","handleDelete","counterId","filter","c","setState","handleRes","handleIncr","index","indexOf","handleDecr","handleAdd","i","length","textchange","e","target","console","log","Fragment","onChange","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.80178d1a.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Navbar extends Component {\n    \n\nrender() {\n \n\nreturn (\n <div>\n              <nav  class=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar <span className=\"badge badge-pill badge-secondary \">{this.props.totalCounters}</span></a>\n                          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span class=\"navbar-toggler-icon\"></span>\n                          </button>\n\n                    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                              <ul class=\"navbar-nav mr-auto\">\n                                      <li class=\"nav-item active\">\n                                         <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n                                      </li>\n                                      <li class=\"nav-item\">\n                                           <a class=\"nav-link\" href=\"#\">Link</a>\n                                      </li>\n                                          <li class=\"nav-item dropdown\">\n                                              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                Dropdown\n                                              </a>\n                                                  <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                                    <a class=\"dropdown-item\" href=\"#\">Action</a>\n                                                    <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                                                    <div class=\"dropdown-divider\"></div>\n                                                    <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                                                  </div>\n                                          </li>\n                                      <li class=\"nav-item\">\n                                             <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n                                      </li>\n                              </ul>\n                                  \n                    </div>\n            </nav>\n </div>\n);\n }\n\n   \n}\nexport default Navbar;","import React, {Component} from 'react';\n\n\nclass Counter extends Component {\n    \n\nrender() {\n  \nreturn (\n<div>\n    <span>{this.props.counter.text}:</span>\n    <span  className={this.getBadgeClasses()}>{this.formateCount()} </span>\n    <button\n     onClick={() => this.props.onIncre(this.props.counter)} \n     className= \"btn btn-secondary btn-sm m-2\">increment\n     </button>\n     <button\n     onClick={() => this.props.onDecre(this.props.counter)} \n     className= \"btn btn-secondary btn-sm 2\">decrement\n     </button>\n\n\n    <button\n     onClick={ () => this.props.onDelete(this.props.counter.id)} \n     className=\"btn btn-danger btn-sm m-2 \" >Delete \n     </button>\n       \n </div>   \n);\n }\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        if (this.props.counter.value == 0) {\n            classes += \"warning\";\n        }\n        else\n            classes += \"primary \";\n        return classes;\n    }\n\n formateCount(){\n     const { value } = this.props.counter;\n     return value  === 0 ? \"zero\": value  ;\n    return value;\n }\n}\nexport default Counter;","import React, {Component} from 'react';\nimport Counter from './counter';\n\nclass Counters extends Component {\n   \n\nrender() {\n \n\nreturn (\n <div>\n\n     <button \n     onClick={this.props.OnReset}\n     className=\"btn btn-primary btn-sm m-2\">Reset \n     </button>\n     {/* ///////////////////////////////////////////////////////// */}\n     \n\n{/* ///////////////////////////////////////////////////////// */}\n     {this.props.counters.map(counter=> \n     <Counter\n      key={counter.id} \n      counter={counter}\n      onDelete={this.props.onDelete} \n      onIncre={this.props.onIncre}\n      \n      onDecre={this.props.onDecre}\n      onAdd={this.props.onAdd}\n      \n\n      >\n       \n    </Counter>\n     \n      )}\n\n </div>\n);\n }\n\n   \n}\nexport default Counters;","import React, {Component} from 'react';\n\n\n\nclass Disc extends Component {\n\n\n    render(){\n        return (\n     <div>\n           <h1 class=\"text-center\"> My Cart </h1> \n           \n    </div>\n        );\n    }\n}\nexport default Disc;","import React, {Component, useState} from 'react';\n\nimport NavBar from './components/navbar';\nimport Counters from './components/counters';\nimport Dis from './components/discr';\n\nimport './App.css';\n\n\n\nclass App extends Component  {\n  state = {\n\n    counters:[\n        {id:1,value:0,text:\"iphone\"},\n        \n    ],\n    txt: \" \"\n};\n// const [txt,sw]=useinput('')\nhandleDelete= (counterId) => { \nconst  counters= this.state.counters.filter(c => c.id !==counterId); \nthis.setState({counters});\n    //  console.log(\"this\",counterId) ;\n\n\n};\nhandleRes= () => { \n  const counters=  this.state.counters.map(c=>{\nc.value=0;\nreturn c;\n\n    });\n\n        this.setState({counters});\n    \n\n    };\n\n    handleIncr= (counter)=> { \n\nconst counters =[...this.state.counters];\nconst index =counters.indexOf(counter);\ncounters[index]={...counter};\n\ncounters[index].value++;\nthis.setState({counters});\n\n};\nhandleDecr= (counter)=> { \n\n  const counters =[...this.state.counters];\n  const index =counters.indexOf(counter);\n  counters[index]={...counter};\n  if(counters[index].value>0){\n  counters[index].value--;\n  this.setState({counters});\n  }\n  };\n  handleAdd =()=> {\n\nif(this.state.txt!==\" \"){\n  \n    const counters =[...this.state.counters];\n    let i=counters.length+1;\n    counters[i-1]={id:i,value:0,text:this.state.txt};\n   this.state.counters=counters;\n  \n    \n  \n   this.setState({counters});\n   this.state.txt=\" \"\n  \n}\n  };\n  textchange=(e) => {\n  \nthis.state.txt=e.target.value\nconsole.log(this.state.counters)\n\n  };\n  \nrender(){\n  return (\n    <React.Fragment>\n                    <NavBar totalCounters={this.state.counters.filter(c => c.value>0).length} />\n                    <main className=\"container\">\n                          <div className=\"row\" >\n                                <div className=\"col-12\" > \n                                      <Dis />\n                                </div>\n                                \n                          \n                          </div>\n                    </main>\n                    {/* ////////////////////////////////// */}\n\n                    <button \n                    onClick={()=>this.handleAdd()}\n                    className=\"btn btn-primary btn-sm m-2\">Add \n                    </button>\n                    {/* //////////////////////// */}\n\n                    \n                  <div  ><input type=\"text\"  onChange={e=>this.textchange(e)} /></div>\n\n\n                  {/* //////////////////////// */}\n                    <div > \n\n                          <Counters\n                          counters={this.state.counters}\n                          OnReset={this.handleRes}\n                          onDelete={this.handleDelete}\n                          onIncre={this.handleIncr}\n                          onDecre={this.handleDecr}\n                          \n                          />\n                    </div>\n\n    </React.Fragment>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}